"use strict";function _instanceof(a,b){return null!=b&&"undefined"!=typeof Symbol&&b[Symbol.hasInstance]?b[Symbol.hasInstance](a):a instanceof b}function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!_instanceof(a,b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var EasyGraphJS=function(){function h(i,a,b,c){_classCallCheck(this,h);try{this.isEmpty=function(b){return void 0===b||null===b||0>=b.length},this.error=function(b){console.error("[EasyGraphJS] : "+b)},this.log=function(b){console.log("[EasyGraphJS] : "+b)},this.getDistance=18;var d=this.canvas=document.createElement("canvas"),e=this.context=d.getContext("2d"),f=document.body;if(this.context.mozImageSmoothingEnabled=!1,this.context.webkitImageSmoothingEnabled=!1,this.context.msImageSmoothingEnabled=!1,this.context.imageSmoothingEnabled=!1,"number"!=typeof i||"number"!=typeof a)this.error("You need to set width and height of graph!");else{try{d.style.width=Math.floor(i)+"px",d.style.height=Math.floor(a)+"px",this.width=d.width=Math.floor(i),this.height=d.height=Math.floor(a)}catch{this.error("Cannot set width and height of graph!")}if(!this.isEmpty(b))if("object"==_typeof(b)){for(var j in b)if("bgColor"==j)try{d.style.backgroundColor=b[j]}catch{this.error("Cannot set background color of graph!")}else continue;}else this.error("Third parameter must be an object!");c&&("string"==typeof c?f=document.querySelector(c):(this.error("Container not found!"),f=document.body))}this.context.transform(1,0,0,-1,0,this.height),this.context.save(),f.appendChild(this.canvas)}catch(b){this.error("Error during graph initialization!")}}return _createClass(h,[{key:"clear",value:function(){this.context.clearRect(0,0,this.width,this.height)}},{key:"point",value:function(b){if(!this.isEmpty(b))try{this.isEmpty(b.x)?this.error("You need to set X coordinate of point!"):this.isEmpty(b.y)?this.error("You need to set Y coordinate of point!"):"number"==typeof b.x&&"number"==typeof b.y?(this.context.fillStyle=b.color?b.color:"black",this.context.fillRect(Math.floor(b.x),Math.floor(b.y),b.size?b.size:1,b.size?b.size:1)):this.error("Point coordinates must be numbers!")}catch(b){this.error("Error when drawing a point!")}else this.log("You do not want to use any parameters in the \"point\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"drawPoints",value:function(h){if(h.points&&"object"==_typeof(h.points)){this.context.lineWidth=h.lineWidth?1>h.lineWidth?1:Math.floor(h.lineWidth):1,this.context.strokeStyle=h.color?h.color:"black";for(var a=h.pointsStyle.size?h.pointsStyle.size:10,b=h.pointsStyle.fontSize?h.pointsStyle.fontSize:10,c=h.pointsStyle.fontFamily?h.pointsStyle.fontFamily:"Arial",d=h.pointsStyle.color?h.pointsStyle.color:"black",e=0;e<h.points.length;e++){if(this.context.beginPath(),this.context.moveTo(h.points[e][0],h.points[e][1]),h.points[e][2]){var i=h.points[e][2].top?b:-b;this.text({x:h.points[e][0]-a/2,y:h.points[e][1]-a/2+i,text:h.points[e][2].text,font:{size:b,type:c,align:"center"},color:d})}if(this.point({x:h.points[e][0]-a/2,y:h.points[e][1]-a/2,size:a,color:d}),h.points[e]===h.points[h.points.length-1]){if(this.context.lineTo(h.points[e][0],h.points[e][1]),this.context.closePath(),this.context.stroke(),h.points[e][2]){var g=h.points[e][2].top?b:-b;this.text({x:h.points[e][0]-a/2,y:h.points[e][1]-a/2+g,text:h.points[e][2].text,font:{size:b,type:c,align:"center"},color:d})}this.point({x:h.points[e][0]-a/2,y:h.points[e][1]-a/2,size:a,color:d})}else{if(this.context.lineTo(h.points[e+1][0],h.points[e+1][1]),this.context.closePath(),this.context.stroke(),h.points[e+1][2]){var j=h.points[e+1][2].top?b:-b;this.text({x:h.points[e+1][0]-a/2,y:h.points[e+1][1]-a/2+j,text:h.points[e+1][2].text,font:{size:b,type:c,align:"center"},color:d})}this.point({x:h.points[e+1][0]-a/2,y:h.points[e+1][1]-a/2,size:a,color:d})}}}else this.error("You need to set correct coordinates of points!")}},{key:"line",value:function(d){if(!this.isEmpty(d))try{if(!d.points||2!==d.points.length)this.error("You need to set correct coordinates of points of your line!");else{var a=d.color?d.color:"black",b=d.lineWidth?1>d.lineWidth?1:Math.floor(d.lineWidth):1;this.context.beginPath(),this.context.lineWidth=b,this.context.strokeStyle=a,this.context.moveTo(Math.floor(d.points[0][0]),Math.floor(d.points[0][1])),this.context.lineTo(Math.floor(d.points[1][0]),Math.floor(d.points[1][1])),this.context.stroke()}}catch(b){this.error("Error when drawing a line!")}else this.log("You do not want to use any parameters in the \"line\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"grid",value:function(e){(this.isEmpty(e)||!e)&&this.log("You do not want to use any parameters in the \"grid\" function. This is a bad coding method that can make you become a bad developer!");var a=e?e.size?1>e.size?1:Math.floor(e.size):this.getDistance:this.getDistance,b=e.lineWidth?1>e.lineWidth?1:Math.floor(e.lineWidth):1,c=e?e.color?e.color:"black":"black";this.context.beginPath(),this.context.lineWidth=b,this.context.strokeStyle=c;for(var d=Math.floor(b/2);d<=this.width;d+=a)this.context.moveTo(d,0),this.context.lineTo(d,this.height);for(var f=Math.floor(b/2);f<=this.height;f+=a)this.context.moveTo(0,f),this.context.lineTo(this.width,f);this.context.stroke()}},{key:"rectangle",value:function(d){if(!this.isEmpty(d))try{if(this.isEmpty(d.x))this.error("You need to set X coordinate of rectangle!");else if(this.isEmpty(d.y))this.error("You need to set Y coordinate of rectangle!");else if(this.isEmpty(d.width))this.error("You need to set width of rectangle!");else if(this.isEmpty(d.height))this.error("You need to set height of rectangle!");else if("number"!=typeof d.x||"number"!=typeof d.y)this.error("Rectangle coordinates must be numbers!");else if("number"!=typeof d.width||"number"!=typeof d.height)this.error("The size of the rectangle must be a number!");else if(d.rounded&&"object"==_typeof(d.rounded)){if(!(d.rounded.radius&&"number"==typeof d.rounded.radius))this.error("The Radius of the rounded rectangle must be a number!");else if(d.stroke&&"object"==_typeof(d.stroke)){var a=d.stroke.color?d.stroke.color:"black",b=d.stroke.lineWidth?1>d.stroke.lineWidth?1:Math.floor(d.stroke.lineWidth):1;this.context.beginPath(),this.context.lineWidth=b,this.context.strokeStyle=a,d.x=Math.floor(d.x),d.y=Math.floor(d.y),d.width=Math.floor(d.width),d.height=Math.floor(d.height),d.rounded.radius=Math.floor(d.rounded.radius),this.context.moveTo(d.x,d.y+d.rounded.radius),this.context.lineTo(d.x,d.y+d.height-d.rounded.radius),this.context.arcTo(d.x,d.y+d.height,d.x+d.rounded.radius,d.y+d.height,d.rounded.radius),this.context.lineTo(d.x+d.width-d.radius,d.y+d.height),this.context.arcTo(d.x+d.width,d.y+d.height,d.x+d.width,d.y+d.height-d.rounded.radius,d.rounded.radius),this.context.lineTo(d.x+d.width,d.y+d.rounded.radius),this.context.arcTo(d.x+d.width,d.y,d.x+d.width-d.rounded.radius,d.y,d.rounded.radius),this.context.lineTo(d.x+d.rounded.radius,d.y),this.context.arcTo(d.x,d.y,d.x,d.y+d.rounded.radius,d.rounded.radius),this.context.stroke()}else{var c=d.bgColor?d.bgColor:"black";this.context.beginPath(),this.context.fillStyle=c,d.x=Math.floor(d.x),d.y=Math.floor(d.y),d.width=Math.floor(d.width),d.height=Math.floor(d.height),d.rounded.radius=Math.floor(d.rounded.radius),this.context.moveTo(d.x,d.y+d.rounded.radius),this.context.lineTo(d.x,d.y+d.height-d.rounded.radius),this.context.arcTo(d.x,d.y+d.height,d.x+d.rounded.radius,d.y+d.height,d.rounded.radius),this.context.lineTo(d.x+d.width-d.radius,d.y+d.height),this.context.arcTo(d.x+d.width,d.y+d.height,d.x+d.width,d.y+d.height-d.rounded.radius,d.rounded.radius),this.context.lineTo(d.x+d.width,d.y+d.rounded.radius),this.context.arcTo(d.x+d.width,d.y,d.x+d.width-d.rounded.radius,d.y,d.rounded.radius),this.context.lineTo(d.x+d.rounded.radius,d.y),this.context.arcTo(d.x,d.y,d.x,d.y+d.rounded.radius,d.rounded.radius),this.context.fill()}}else if(d.stroke&&"object"==_typeof(d.stroke)){var e=d.stroke.color?d.stroke.color:"black",f=d.stroke.lineWidth?1>d.stroke.lineWidth?1:Math.floor(d.stroke.lineWidth):1;this.context.lineWidth=f,this.context.strokeStyle=e,this.context.strokeRect(Math.floor(d.x),Math.floor(d.y),Math.floor(d.width),Math.floor(d.height))}else{var g=d.bgColor?d.bgColor:"black";this.context.fillStyle=g,this.context.fillRect(Math.floor(d.x),Math.floor(d.y),Math.floor(d.width),Math.floor(d.height))}}catch(b){this.error("Error when drawing a rectangle!")}else this.log("You do not want to use any parameters in the \"rectangle\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"triangle",value:function(d){if(!this.isEmpty(d))try{if(this.isEmpty(d.points)||3!==d.points.length||2!==d.points[0].length||2!==d.points[1].length||2!==d.points[2].length)this.error("You need to set correct coordinates of points of your triangle!");else if(d.stroke&&"object"==_typeof(d.stroke)){var a=d.stroke.color?d.stroke.color:"black",b=d.stroke.lineWidth?1>d.stroke.lineWidth?1:Math.floor(d.stroke.lineWidth):1;this.context.beginPath(),this.context.lineWidth=b,this.context.strokeStyle=a,this.context.moveTo(Math.floor(d.points[0][0]),Math.floor(d.points[0][1])),this.context.lineTo(Math.floor(d.points[1][0]),Math.floor(d.points[1][1])),this.context.lineTo(Math.floor(d.points[2][0]),Math.floor(d.points[2][1])),this.context.lineTo(Math.floor(d.points[0][0]),Math.floor(d.points[0][1])),this.context.stroke()}else{var c=d.bgColor?d.bgColor:"black";this.context.beginPath(),this.context.fillStyle=c,this.context.moveTo(Math.floor(d.points[0][0]),Math.floor(d.points[0][1])),this.context.lineTo(Math.floor(d.points[1][0]),Math.floor(d.points[1][1])),this.context.lineTo(Math.floor(d.points[2][0]),Math.floor(d.points[2][1])),this.context.lineTo(Math.floor(d.points[0][0]),Math.floor(d.points[0][1])),this.context.fill()}}catch(b){this.error("Error when drawing a triangle!")}else this.log("You do not want to use any parameters in the \"triangle\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"circle",value:function(d){if(!this.isEmpty(d))try{if(this.isEmpty(d.x)||this.isEmpty(d.y))this.error("You need to set coordinates of circle!");else if(this.isEmpty(d.radius))this.error("You need to set radius of circle!");else if("number"!=typeof d.x||"number"!=typeof d.y||"number"!=typeof d.radius)this.error("Parameters of circle must be numbers!");else if(d.stroke&&"object"==_typeof(d.stroke)){var a=d.stroke.color?d.stroke.color:"black",b=d.stroke.lineWidth?1>d.stroke.lineWidth?1:Math.floor(d.stroke.lineWidth):1;this.context.beginPath(),this.context.lineWidth=b,this.context.strokeStyle=a,this.context.arc(Math.floor(d.x),Math.floor(d.y),Math.floor(d.radius),0,2*Math.PI,!0),this.context.stroke()}else{var c=d.bgColor?d.bgColor:"black";this.context.beginPath(),this.context.fillStyle=c,this.context.arc(Math.floor(d.x),Math.floor(d.y),Math.floor(d.radius),0,2*Math.PI,!0),this.context.fill()}}catch(b){this.error("Error when drawing a circle!")}else this.log("You do not want to use any parameters in the \"circle\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"ellipse",value:function(f){if(!this.isEmpty(f))try{if(this.isEmpty(f.x)||this.isEmpty(f.y))this.error("You need to set coordinates of ellipse!");else if(!f.radius||"object"!=_typeof(f.radius))this.error("You need to set right radii of ellipse!");else if("number"!=typeof f.x||"number"!=typeof f.y)this.error("Ellipse coordinates must be numbers!");else if(!(f.radius.x&&"number"==typeof f.radius.x&&f.radius.y&&"number"==typeof f.radius.y))this.error("Ellipse radii must be numbers!");else if(f.stroke&&"object"==_typeof(f.stroke)){var a=f.stroke.color?f.stroke.color:"black",c=f.stroke.lineWidth?1>f.stroke.lineWidth?1:Math.floor(f.stroke.lineWidth):1,d=1;f.angle&&"number"==typeof f.angle&&(0<=f.angle&&1>=f.angle?d=f.angle:this.error("Angle must be greater than 0 and less than 1!")),this.context.beginPath(),this.context.lineWidth=c,this.context.strokeStyle=a;for(var g=0*Math.PI;g<2*Math.PI;g+=.01){var h=f.x-f.radius.x*Math.sin(g)*Math.sin(d*Math.PI)+f.radius.y*Math.cos(g)*Math.cos(d*Math.PI),i=f.y+f.radius.y*Math.cos(g)*Math.sin(d*Math.PI)+f.radius.x*Math.sin(g)*Math.cos(d*Math.PI);0==g?this.context.moveTo(h,i):this.context.lineTo(h,i)}this.context.stroke()}else{var j=f.bgColor?f.bgColor:"black",k=0;f.angle&&"number"==typeof f.angle&&(0<=f.angle&&1>=f.angle?k=f.angle:this.error("Angle must be greater than zero and less than one!")),this.context.beginPath(),this.context.fillStyle=j;for(var g=0*Math.PI;g<2*Math.PI;g+=.01){var l=f.x-f.radius.x*Math.sin(g)*Math.sin(k*Math.PI)+f.radius.y*Math.cos(g)*Math.cos(k*Math.PI),m=f.y+f.radius.y*Math.cos(g)*Math.sin(k*Math.PI)+f.radius.x*Math.sin(g)*Math.cos(k*Math.PI);0==g?this.context.moveTo(l,m):this.context.lineTo(l,m)}this.context.fill()}}catch(b){this.error("Error when drawing a ellipse!")}else this.log("You do not want to use any parameters in the \"ellipse\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"polygon",value:function(d){if(!this.isEmpty(d))try{if(!d.points||3>d.points.length)this.error("You need to set correct coordinates of points of your polygon!");else if(d.stroke&&"object"==_typeof(d.stroke)){var a=d.stroke.color?d.stroke.color:"black",b=d.stroke.lineWidth?1>d.stroke.lineWidth?1:Math.floor(d.stroke.lineWidth):1;this.context.beginPath(),this.context.lineWidth=b,this.context.strokeStyle=a;for(var c=0;c<d.points.length;c++)0==c?this.context.moveTo(Math.floor(d.points[0][0]),Math.floor(d.points[0][1])):this.context.lineTo(Math.floor(d.points[c][0]),Math.floor(d.points[c][1]));this.context.stroke()}else{var e=d.bgColor?d.bgColor:"black";this.context.beginPath(),this.context.fillStyle=e;for(var f=0;f<d.points.length;f++)0==f?this.context.moveTo(Math.floor(d.points[0][0]),Math.floor(d.points[0][1])):this.context.lineTo(Math.floor(d.points[f][0]),Math.floor(d.points[f][1]));this.context.fill()}}catch(b){this.error("Error when drawing a polygon!")}else this.log("You do not want to use any parameters in the \"polygon\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"text",value:function(j){if(!this.isEmpty(j))try{if(this.isEmpty(j.x)||this.isEmpty(j.y))this.error("You need to set coordinates of text!");else if(!j.text||this.isEmpty(j.text))this.error("You must specify the text to be displayed!");else if(!j.font||"object"!=_typeof(j.font))this.error("You must specify the font of text to be displayed!");else if("number"!=typeof j.x||"number"!=typeof j.y||"string"!=typeof j.text||""===j.text)this.error("You must specify the correct type of parameters!");else if(j.stroke&&"object"==_typeof(j.stroke)){var a,k,l,m=j.stroke.color?j.stroke.color:"black",e=j.stroke.lineWidth?1>j.stroke.lineWidth?1:Math.floor(j.stroke.lineWidth):1,f=j.color?j.color:"black",g=j.font.size?0==+j.font.size%1?j.font.size:Math.floor(j.font.size):10,h=j.font.family?j.font.family:"sans-serif";a="start"===j.font.align||"end"===j.font.align||"left"===j.font.align||"right"===j.font.align||"center"===j.font.align?j.font.align:"start",k="top"===j.font.baseline||"hanging"===j.font.baseline||"middle"===j.font.baseline||"alphabetic"===j.font.baseline||"ideographic"===j.font.baseline||"bottom"===j.font.baseline?j.font.baseline:"alphabetic",l="ltr"===j.font.direction||"rtl"===j.font.direction||"inherit"===j.font.direction?j.font.direction:"inherit",this.context.lineWidth=e,this.context.strokeStyle=m,this.context.fillStyle=f,this.context.font=g+"px "+h,this.context.textAlign=a,this.context.textBaseline=k,this.context.direction=l,j.font.maxWidth&&"number"==typeof j.font.maxWidth?(this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.context.strokeText(j.text.trim(),j.x,this.height-j.y,Math.floor(j.font.maxWidth)),this.context.restore()):(this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.context.strokeText(j.text.trim(),j.x,this.height-j.y),this.context.restore())}else{var i,n,o,p=j.color?j.color:"black",q=j.font.size?0==+j.font.size%1?j.font.size:Math.floor(j.font.size):10,r=j.font.type?j.font.type:"sans-serif";i="start"===j.font.align||"end"===j.font.align||"left"===j.font.align||"right"===j.font.align||"center"===j.font.align?j.font.align:"start",n="top"===j.font.baseline||"hanging"===j.font.baseline||"middle"===j.font.baseline||"alphabetic"===j.font.baseline||"ideographic"===j.font.baseline||"bottom"===j.font.baseline?j.font.baseline:"alphabetic",o="ltr"===j.font.direction||"rtl"===j.font.direction||"inherit"===j.font.direction?j.font.direction:"inherit",this.context.fillStyle=p,this.context.font=q+"px "+r,this.context.textAlign=i,this.context.textBaseline=n,this.context.direction=o,j.font.maxWidth&&"number"==typeof j.font.maxWidth?(this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.context.fillText(j.text.trim(),j.x,this.height-j.y,Math.floor(j.font.maxWidth)),this.context.restore()):(this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.context.fillText(j.text.trim(),j.x,this.height-j.y),this.context.restore())}}catch(b){this.error("Error when drawing a text!")}else this.log("You do not want to use any parameters in the \"text\" function. This is a bad coding method that can make you become a bad developer!")}},{key:"axes",value:function(h){if(h.labels&&"object"==_typeof(h.labels)){var a={lineWidth:h.separators.lineWidth?1>h.separators.lineWidth?1:Math.floor(h.separators.lineWidth):1,color:h.separators.color?h.separators.color:"black"},b=this.offset={x:h.offset&&h.offset.x?h.offset.x:0,y:h.offset&&h.offset.y?h.offset.y:0},c={x:h.text&&h.text.x&&h.text.x.fontSize?h.text.x.fontSize:10,y:h.text&&h.text.y&&h.text.y.fontSize?h.text.y.fontSize:10},d={x:h.text.x.fontFamily?h.text.x.fontFamily:"Arial",y:h.text.y.fontFamily?h.text.y.fontFamily:"Arial"};this.context.beginPath(),this.context.lineWidth=this.lineWidth=a.lineWidth?1>a.lineWidth?1:Math.floor(a.lineWidth):1,this.context.strokeStyle=a.color?a.color:"black",this.context.moveTo(b.x+a.lineWidth/2,b.y),this.context.lineTo(b.x+a.lineWidth/2,this.height),this.context.moveTo(b.x,a.lineWidth/2+b.y),this.context.lineTo(this.width,a.lineWidth/2+b.y),this.context.closePath(),this.context.stroke(),this.context.beginPath(),this.context.lineWidth=a.lineWidth,this.context.strokeStyle=a.color;for(var e=h.distance?h.distance.x?h.distance.y?h.distance:{x:h.distance.x,y:10}:{x:10,y:10}:{x:10,y:10},f=b.x+e.x;f+e.x/2<h.labels.horizontal.length*e.x+2*b.x;f+=e.x)this.context.moveTo(f,b.y+c.y/2),this.context.lineTo(f,b.y-c.y/4-a.lineWidth);for(var i=b.y+e.y;i<h.labels.vertical.length*e.y+2*b.y;i+=e.y)this.context.moveTo(b.x-a.lineWidth-c.y/2,i),this.context.lineTo(b.x-2*a.lineWidth+c.y,i);if(h.labels.vertical){var j=[];this.context.fillStyle=a.color?a.color:"black",this.context.font=d.y&&c.y?""+c.y+"px "+d.y:"10px Arial",this.context.align="center";for(var g=b.y+e.y;g<h.labels.vertical.length*e.y+2*b.y;g+=e.y)j.push([b.x,this.height-g+this.context.measureText("M").width/2-1]);for(var k=0;k<h.labels.vertical.length;k++)j[k]&&j[k][1]&&(this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.context.fillText(h.labels.vertical[k],b.x/2-c.y,j[k][1]),this.context.restore())}if(h.labels.horizontal){var l=[];this.context.fillStyle=a.color?a.color:"black",this.context.font=d.x&&c.x?""+c.x+"px "+d.x:"10px Arial",this.context.align="center";for(var m=b.x+e.x;m<h.labels.horizontal.length*e.x+2*b.x;m+=e.x)l.push([m,b.y]);for(var n=0;n<h.labels.horizontal.length;n++)l[n]&&l[n][1]&&(this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.context.fillText(h.labels.horizontal[n],l[n][0]-this.context.measureText(h.labels.horizontal[n]).width/2,this.height-l[n][1]+b.y/2+c.x),this.context.restore())}this.context.closePath(),this.context.stroke(),this.context.restore()}else this.error("You need to set correct \"labels\" parameter!")}},{key:"getOffset",value:function(){return this.offset}},{key:"getLineWidth",value:function(){return this.lineWidth}},{key:"getWidth",value:function(){return this.width}},{key:"getHeight",value:function(){return this.height}},{key:"getTextMetrix",value:function(b){if("string"==typeof b)return this.context.measureText(b)}}],[{key:"rgba",value:function(g,a,b,c){var d=function(b){return void 0===b||null===b||0>=b.length},e=function(b){console.error("[EasyGraphJS] : "+b)};if(d(g)||d(a)||d(b)||d(c))e("The \"RGBA\" function must accept 4 parameters!");else if("number"!=typeof g||"number"!=typeof a||"number"!=typeof b||"number"!=typeof c)e("All parameters of the function \"rgba\" must be numbers");else if(0<=g&&255>=g&&0<=a&&255>=a&&0<=b&&255>=b){if(0<=c&&1>=c)return"rgba("+Math.floor(g)+","+Math.floor(a)+","+Math.floor(b)+","+c+")";e("The last parameter of the function \"rgba\" must be greater than 0 and less than 1!")}else e("The first three parameters of the function \"rgba\" must be greater than 0 and less than 255!")}},{key:"rgb",value:function(f,a,b){var c=function(b){return void 0===b||null===b||0>=b.length},d=function(b){console.error("[EasyGraphJS] : "+b)};if(c(f)||c(a)||c(b))d("The \"RGB\" function must accept 3 parameters!");else if("number"==typeof f&&"number"==typeof a&&"number"==typeof b){if(0<=f&&255>=f&&0<=a&&255>=a&&0<=b&&255>=b)return"rgba("+Math.floor(f)+","+Math.floor(a)+","+Math.floor(b)+")";d("All parameters of the function \"rgb\" must be greater than 0 and less than 255!")}else d("All parameters of the function \"rgb\" must be numbers")}}]),h}();